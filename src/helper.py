# for i in $(objdump -d bin/impure|grep "first_mutation" -A 90 |grep "^ " |cut -f2); do echo -n '\x'$i; done; echo
import sys


mem = "\x1f\x40\xfc\x92\xda\x24\x16\x94\x75\x09\x79\xee\x6c\xf5\x82\xf2\xd5\xd7\xd2\x8e\x18\x33\x5d\xe0\x5a\xbc\x54\xd0\x56\x0e\x0f\x53\x02\x86\x0c\x65\x2b\xf0\x8d\x56\x02\x52\xaa\x5e\x74\x21\x05\x46\xf3\x69\xfb\xbb\xce\x8c\x12\xcf\xc7\x95\x7b\x26\x52\xfe\x9a\x75" + \
    "\x52\x67\x76\x88\x22\xee\x62\x4d\x48\xfc\xe1\x5e\xc5\xca\x79\xcb\xd6\x02\xcb\x7f\x4c\x21\x57\xa5\x16\x55\x69\x91\xf2\x2e\xf8\xc7\xb5\xef\x7b\x18\xd1\xff\x41\xc5\x93\x70\xef\xb0\x85\x86\x51\xd4\x4a\x93\x6c\x11\xb7\xb1\x44\xc4\x8f\xe0\x4d\xf3\xc6\xa3\xe8\xda" + \
    "\xac\xc2\x8d\xb2\xbe\xb7\xb4\x2b\xaa\x1c\xb0\x24\x3d\x40\x1c\xcb\x4e\x3f\xce\x44\xd7\xb0\x28\x79\xa5\x27\x99\xaa\xdf\xf5\x41\x52\x2d\x88\x22\x59\x8b\x2f\xa6\x64\xf9\xd5\x15\x6c\x00\xc9\x24\x80\x5d\x75\xc3\x86\x8b\xd5\x6c\x2a\xcb\x81\xd3\x7e\x98\xe3\x5a\xdc" + \
    "\x48\xfb\x10\xb1\x5f\x3d\x44\xa0\x9d\xc8\x2d\x02\xb0\x65\x81\xe0\xc0\xc6\x94\x78\xc9\xfd\x2c\xf8\xf9\x09\x36\x59\x01\x9a\x16\x87\xba\xec\xdb\xb3\x8c\x9e\x72\xb1\x21\x69\xdc\x41\x48\x69\x0f\x87\x46\x7f\x91\x54\xf5\x93\x1c\x5d\xf6\x65\xc6\x49\x6c\xbf\xd5\xf5" + \
    "\x87\xc5\x68\xe0\x37\xa5\xfa\x50\xb1\xbc\x91\x1e\x8e\xe1\x9a\x77\xc4\xdd\x3c\x22\xbc\xe9\x93\x2f\x86\xfd\xd8\xa2\x16\xaf\xe1\x68\x1c\x89\x73\x7f\xad\xa6\x85\x9e\x91\x04\x7e\xec\xe7\x11\xec\x16\xda\x62\xd6\xcc\xb9\xfd\x0d\xe2\xc5\x1f\x13\x23\x47\x35\x0d\x8c" + \
    "\x71\x1c\x22\x44\x8e\x72\x1e\x54\x91\xd8\x24\x5b\x49\x42\x5a\xa8\x61\xf1\xfc\x4a\x15\x28\x7f\x07\x35\xe2\x03\x79\x9b\x65\xcf\xfe\xc5\x0b\x5a\xbd\x0f\xdd\xd9\x1c\xd6\x43\xae\xb3\xb5\x30\xd4\x8f\x05\xe2\x58\xe7\xe2\x30\xa9\x4e\xd5\x02\x5c\x13\x87\xbb\x4e\x1b" + \
    "\x19\xf1\x42\xb0\x18\xf3\x07\xbf\xdf\x1c\x70\x09\xd1\x5a\x29\x41\x7c\x96\xd8\x67\x8d\x29\x82\xee\xbc\xe4\x96\x1b\x2e\x67\xee\xb1\x18\xa8\xeb\xb1\xd7\x5b\x70\x08\x7c\x3e\x65\xbc\x79\x34\x50\xe3\xfe\x4a\x10\x00\x2b\xef\xa2\xd0\x38\xe5\xae\xd4\x79\x69\x37\xf2" + \
    "\x22\x41\xbc\x8f\xc7\x07\x05\xb4\x2e\xfe\xad\x37\x1f\xd4\x98\x2c\x5b\xa6\x99\x17\xe5\xb4\xb8\x95\x81\x00\x02\x64\x4f\x03\x86\xda\x9c\x31\x31\x79\x34\x58\xc2\xbf\x47\x60\x84\x80\xd6\x4a\x07\x27\x81\x33\xc9\x99\x12\xe0\xba\x2d\xaf\x23\x09\x8f\x35\x20\xeb\x97"

first_func = "\x55\x48\x89\xe5\x48\x89\x7d\xf8\x48\x8b\x45\xf8\x0f\xb6\x00\x3c\x55\x0f\x85\x00\x01\x00\x00\x48\x8b\x45\xf8\x48\x83\xc0\x01\x0f\xb6\x00\x3c\x51\x0f\x85\xed\x00\x00\x00\x48\x8b\x45\xf8\x48\x83\xc0\x02\x0f\xb6\x00\x3c\x41\x0f\x85\xda\x00\x00\x00\x48\x8b\x45\xf8\x48\x83\xc0\x03\x0f\xb6\x00\x3c\x4d\x0f\x85\xc7\x00\x00\x00\x48\x8b\x45\xf8\x48\x83\xc0\x04\x0f\xb6\x00\x3c\x7b\x0f\x85\xb4\x00\x00\x00\x48\x8b\x45\xf8\x48\x83\xc0\x05\x0f\xb6\x00\x3c\x57\x0f\x85\xa1\x00\x00\x00\x48\x8b\x45\xf8\x48\x83\xc0\x06\x0f\xb6\x00\x3c\x68\x0f\x85\x8e\x00\x00\x00\x48\x8b\x45\xf8\x48\x83\xc0\x07\x0f\xb6\x00\x3c\x33\x75\x7f\x48\x8b\x45\xf8\x48\x83\xc0\x08\x0f\xb6\x00\x3c\x72\x75\x70\x48\x8b\x45\xf8\x48\x83\xc0\x09\x0f\xb6\x00\x3c\x33\x75\x61\x48\x8b\x45\xf8\x48\x83\xc0\x0a\x0f\xb6\x00\x3c\x5f\x75\x52\x48\x8b\x45\xf8\x48\x83\xc0\x0b\x0f\xb6\x00\x3c\x54\x75\x43\x48\x8b\x45\xf8\x48\x83\xc0\x0c\x0f\xb6\x00\x3c\x68\x75\x34\x48\x8b\x45\xf8\x48\x83\xc0\x0d\x0f\xb6\x00\x3c\x33\x75\x25\x48\x8b\x45\xf8\x48\x83\xc0\x0e\x0f\xb6\x00\x3c\x5f\x75\x16\x48\x8b\x45\xf8\x48\x83\xc0\x0f\x0f\xb6\x00\x3c\x48\x75\x07\xb8\x01\x00\x00\x00\xeb\x05\xb8\x00\x00\x00\x00\x5d\xc3" 

def convert_to_c_array(byte_str):
    print "Length : {}".format(len(byte_str))
    print "{"
    array_str = ["0x{:02x}".format(int(ord(b))) for b in byte_str]
    for i in range(len(array_str)):
        sys.stdout.write(array_str[i])
        if (i+1) != len(byte_str): sys.stdout.write(", ")
        if ((i + 1) % 16) == 0:
            print ''
    print ""
    print "}"

def xor_mem(mem1, mem2):
    return ''.join([chr(ord(mem1[i]) ^ ord(mem2[i])) for i in range(min(len(mem1), len(mem2)))])





    
    


convert_to_c_array(first_func)
convert_to_c_array(xor_mem(first_func, mem))

